-----------------------Implementación mediante listas de adyacencias---------------------
import java.util.*;

public class Grafo {
    private int V; // Número de vértices
    private LinkedList<Integer> adj[]; // Lista de adyacencia

    // Constructor
    public Grafo(int v) {
        V = v;
        adj = new LinkedList[v];
        for (int i = 0; i < v; ++i)
            adj[i] = new LinkedList();
    }

    // Método para agregar una arista al grafo
    public void agregarArista(int v, int w) {
        adj[v].add(w);
        adj[w].add(v); // Para un grafo no dirigido, se agrega la arista en ambos vértices
    }

    // Método para imprimir la lista de adyacencia del grafo
    public void imprimirListaAdyacencia() {
        for (int i = 0; i < V; ++i) {
            System.out.print("Vértice " + i + " está conectado con: ");
            for (Integer nodo : adj[i]) {
                System.out.print(nodo + " ");
            }
            System.out.println();
        }
    }

    public static void main(String args[]) {
        Grafo grafo = new Grafo(5);
        grafo.agregarArista(0, 1);
        grafo.agregarArista(0, 4);
        grafo.agregarArista(1, 2);
        grafo.agregarArista(1, 3);
        grafo.agregarArista(1, 4);
        grafo.agregarArista(2, 3);
        grafo.agregarArista(3, 4);
        grafo.imprimirListaAdyacencia();
    }
}
--------------------------------------------------------------------------------------

-------------Salida en pantalla-----------------
Vértice 0 está conectado con: 1 4 
Vértice 1 está conectado con: 0 2 3 4 
Vértice 2 está conectado con: 1 3 
Vértice 3 está conectado con: 1 2 4 
Vértice 4 está conectado con: 0 1 3 
-------------------------------------------------
